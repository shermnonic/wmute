# projectme editor - a GUI for projectme (sub-project)
# Max Hermann, Jul 2014

#---- Library -----------------------------------------------------------------

#projectmeImportLibrary( projlib )  
# --> As long as projlib is a parallel sub-project import is not required!

#---- Additional dependencies -------------------------------------------------

# --> Boost and Qt4 already configures in main CMakeList

#---- Qt4 resources & moc -----------------------------------------------------

# Qt4 resource files
set( projectme_RCCS projectme.qrc )

# moc headers
set( projectme_MOC_HDRS	
	MainWindow.h
	RenderSetWidget.h
	ModuleManagerWidget.h
	MapperWidget.h
	ComboBoxDelegate.h	
)

# generate rules for building source files from the Qt resources
qt4_add_resources( projectme_RCC_SRCS ${projectme_RCCS} )

# generate rules for building source files that moc generates
qt4_wrap_cpp( projectme_MOC_SRCS ${projectme_MOC_HDRS} )

# not sure what the advantage of "automoc" is
qt4_automoc( ${projectme_MOC_HDRS} )

source_group("Autogenerated Moc files" FILES ${projectme_MOC_SRCS})


#---- Compiler config ---------------------------------------------------------

add_definitions("-DNOMINMAX")

#---- Executables -------------------------------------------------------------

# Put source code into groups

source_group("glutils" FILES ${GLUTILS_SOURCES})

set( gui_SRCS
	main.cpp
	MainWindow.cpp
	MainWindow.h
	RenderSetWidget.h
	RenderSetWidget.cpp
	ModuleManagerWidget.h
	ModuleManagerWidget.cpp
	MapperWidget.h
	MapperWidget.cpp
	ComboBoxDelegate.h
	ComboBoxDelegate.cpp
)
source_group("gui" FILES ${gui_SRCS})

set( engine_SRCS
	ModuleFactory.h
	ModuleFactory.cpp
	RenderSet.h
	RenderSet.cpp
	ShaderModule.h
	ShaderModule.cpp
	ParticleModule.h
	ParticleModule.cpp
	ParticleSystem.h
	ParticleSystem.cpp
	ProjectMe.h
	ProjectMe.cpp
	hraw.h	
	hraw.cpp	
)
source_group("engine" FILES ${engine_SRCS})

add_executable( projectme
	${scene_SRCS}
	${gui_SRCS}
	${engine_SRCS}
	${projectme_MOC_SRCS}
	${projectme_RCC_SRCS}
	${GLUTILS_SOURCES}
)
target_link_libraries( projectme
	# projlib
	${OPENMESH_LIBRARIES}
	${QT_LIBRARIES}
	${OPENGL_LIBRARIES}
	${GLEW_LIBRARY}	
)
