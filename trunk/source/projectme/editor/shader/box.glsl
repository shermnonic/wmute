uniform vec3      iResolution;
uniform sampler2D iChannel0;

// https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms
// automatically generated by GenerateGaussFunctionCode in GaussianBlur.h                                                                                            
vec3 GaussianBlur( sampler2D tex0, vec2 centreUV, vec2 pixelOffset )                                                                           
{                                                                                                                                                                    
    vec3 colOut = vec3( 0, 0, 0 );                                                                                                                                   
                                                                                                                                                                     
    ////////////////////////////////////////////////;
    // Kernel width 7 x 7
    //
    const int stepCount = 2;	
	float gWeights[2];	gWeigths[0] = 0.44908;	gWeights[1] = 0.05092;
	float gOffsets[2];  gOffsets[0] = 0.53805;  gOffsets[1] = 2.06278;
    ////////////////////////////////////////////////;

    for( int i = 0; i < stepCount; i++ )                                                                                                                             
    {                                                                                                                                                                
        vec2 texCoordOffset = gOffsets[i] * pixelOffset;                                                                                                           
        vec3 col = texture2D( tex0, centreUV + texCoordOffset ).rgb + 
                   texture2D( tex0, centreUV – texCoordOffset ).rgb;
        colOut += gWeights[i] * col;
    }                                                                                                                                                                

    return colOut;
}                       

void main()
{
	vec2 uv = (gl_FragCoord.xy+vec2(0.5))/iResolution.xy; // Sample at pixel center	
	gl_FragColor = vec4( GaussianBlur( iChannel0, uv, vec2(1.0)/iResolution.xy ), 1.0 );
}
